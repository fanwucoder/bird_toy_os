<class>
  <identifier>Square</identifier>
  <symbol>{</symbol>
  <classVarDec>
    <keyWord>field</keyWord>
    <keyWord>int</keyWord>
    <identifier>x</identifier>
    <symbol>,</symbol>
    <identifier>y</identifier>
    <symbol>;</symbol>
  </classVarDec>
  <class/>
  <classVarDec>
    <keyWord>field</keyWord>
    <keyWord>int</keyWord>
    <identifier>size</identifier>
    <symbol>;</symbol>
  </classVarDec>
  <class/>
  <subroutineDec>
    <keyWord>constructor</keyWord>
    <identifier>Square</identifier>
    <identifier>new</identifier>
    <symbol>(</symbol>
    <parameterList>
      <symbol>(</symbol>
      <keyWord>int</keyWord>
      <identifier>Ax</identifier>
      <symbol>,</symbol>
      <keyWord>int</keyWord>
      <identifier>Ay</identifier>
      <symbol>,</symbol>
      <keyWord>int</keyWord>
      <identifier>Asize</identifier>
    </parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <letStatement>
          <keyWord>let</keyWord>
          <identifier>x</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>Ax</identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyWord>let</keyWord>
          <identifier>y</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>Ay</identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyWord>let</keyWord>
          <identifier>size</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier>Asize</identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <doStatement>
          <keyWord>do</keyWord>
          <identifier>draw</identifier>
          <symbol>(</symbol>
          <expressionList/>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyWord>return</keyWord>
          <expression>
            <term>
              <identifier>x</identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyWord>method</keyWord>
    <keyWord>void</keyWord>
    <identifier>dispose</identifier>
    <symbol>(</symbol>
    <parameterList>
      <symbol>(</symbol>
    </parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <keyWord>do</keyWord>
          <identifier>Memory</identifier>
          <symbol>.</symbol>
          <identifier>deAlloc</identifier>
          <symbol>(</symbol>
          <expressionList/>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyWord>return</keyWord>
          <expression>
            <term/>
          </expression>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyWord>method</keyWord>
    <keyWord>void</keyWord>
    <identifier>draw</identifier>
    <symbol>(</symbol>
    <parameterList>
      <symbol>(</symbol>
    </parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <keyWord>do</keyWord>
          <identifier>Screen</identifier>
          <symbol>.</symbol>
          <identifier>setColor</identifier>
          <symbol>(</symbol>
          <expressionList/>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <doStatement>
          <keyWord>do</keyWord>
          <identifier>Screen</identifier>
          <symbol>.</symbol>
          <identifier>drawRectangle</identifier>
          <symbol>(</symbol>
          <expressionList/>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyWord>return</keyWord>
          <expression>
            <term/>
          </expression>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyWord>method</keyWord>
    <keyWord>void</keyWord>
    <identifier>erase</identifier>
    <symbol>(</symbol>
    <parameterList>
      <symbol>(</symbol>
    </parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <keyWord>do</keyWord>
          <identifier>Screen</identifier>
          <symbol>.</symbol>
          <identifier>setColor</identifier>
          <symbol>(</symbol>
          <expressionList/>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <doStatement>
          <keyWord>do</keyWord>
          <identifier>Screen</identifier>
          <symbol>.</symbol>
          <identifier>drawRectangle</identifier>
          <symbol>(</symbol>
          <expressionList/>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyWord>return</keyWord>
          <expression>
            <term/>
          </expression>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyWord>method</keyWord>
    <keyWord>void</keyWord>
    <identifier>incSize</identifier>
    <symbol>(</symbol>
    <parameterList>
      <symbol>(</symbol>
    </parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <ifStatement>
          <keyWord>if</keyWord>
        </ifStatement>
      </statements>
    </subroutineBody>
  </subroutineDec>
</class>
